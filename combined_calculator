# will be constantly updated

print('list: free_calc, standard_form')

ask = input('What calculation do you want to try: ')

def standard_form():
    print('-' * 5, 'Standard Form Calculator', '-' * 5)
    equation = input('Insert your equation [ax + by = c] ')
    equation = equation.split(' ')


    def slope():
        if equation[0][0] == '-' and equation[2][0] != '-':
            print('Slope from your standard formed equation is ... ', \
                  (float(equation[0][1])) / float(equation[2][0]))
        elif equation[2][0] == '-' and equation[0][0] != '-':
            print('Slope from your standard formed equation is ... ', \
                  (float(equation[0][0])) / float(equation[2][1]))
        elif equation[0][0] == '-' and equation[2][0] == '-':
            print('Slope from your standard formed equation is ... ', \
                  (-1*float(equation[0][1])) / float(equation[2][1]))
        else:
            print('Slope from your standard formed equation is ... ', \
                  (-1 * float(equation[0][0])) / float(equation[2][0]))

    def y_intercept():
        if equation[2][0] == '-' and equation[4][0] != '-':
            print('Y-intercept from your standard formed equation is ... ', \
                  -1*float(equation[4]) / float(equation[2][1]))
        elif equation[4][0] == '-' and equation[2][0] != '-':
            print('Y-intercept from your standard formed equation is ... ', \
                  -1 * float(equation[4][1]) / float(equation[2][0]))
        elif equation[2][0] == '-' and equation[4][0] == '-':
            print('Y-intercept from your standard formed equation is ... ', \
                  float(equation[4][1]) / float(equation[2][1]))
        else:
            print('Y-intercept from your standard formed equation is ... ', \
                  float(equation[4])/float(equation[2][0]))

    def linear_equation():

        if equation[0][0] == '-' and equation[2][0] != '-' and equation[4][0] != '-':
            print('linear equation for your standard formed equation is ...' \
                ,'y','=',float(equation[0][1])/float(equation[2][0]) \
                ,'x','+',float(equation[4])/float(equation[2][0]))

        elif equation[0][0] == '-' and equation[2][0] == '-' and equation[4][0] != '-':
            print('linear equation for your standard formed equation is ...' \
                ,'y','=',-1*float(equation[0][1])/float(equation[2][1]) \
                ,'x','+',-1*float(equation[4])/float(equation[2][1]))

        elif equation[0][0] == '-' and equation[2][0] == '-' and equation[4][0] == '-':
            print('linear equation for your standard formed equation is ...' \
                ,'y','=',-1*float(equation[0][1])/float(equation[2][1]) \
                ,'x','+',float(equation[4][1])/float(equation[2][1]))

        elif equation[0][0] == '-' and equation[2][0] != '-' and equation[4][0] == '-':
            print('linear equation for your standard formed equation is ...' \
                ,'y','=',float(equation[0][1])/float(equation[2][0]) \
                ,'x','+',-1*float(equation[4][1])/float(equation[2][0]))

        elif equation[0][0] != '-' and equation[2][0] == '-' and equation[4][0] == '-':
            print('linear equation for your standard formed equation is ...' \
                ,'y','=',float(equation[0][0])/float(equation[2][1]) \
                ,'x','+',float(equation[4][1])/float(equation[2][1]))

        elif equation[0][0] != '-' and equation[2][0] != '-' and equation[4][0] == '-':
            print('linear equation for your standard formed equation is ...' \
                ,'y','=',-1*float(equation[0])/float(equation[2][0]) \
                ,'x','+',-1*float(equation[4][1])/float(equation[2][0]))

        elif equation[0][0] != '-' and equation[2][0] != '-' and equation[4][0] != '-':
            print('linear equation for your standard formed equation is ...' \
                ,'y','=',-1*float(equation[0][0])/float(equation[2][0]) \
                ,'x','+',float(equation[4])/float(equation[2][0]))

        elif equation[0][0] != '-' and equation[2][0] == '-' and equation[4][0] != '-':
            print('linear equation for your standard formed equation is ...' \
                ,'y','=',float(equation[0][0])/float(equation[2][1]) \
                ,'x','+',float(equation[4])/float(equation[2][1]))


    def type_of_calculation():
        if y_n == 'y':
            type = input('What type of calculation do you want to try? (slope/y_intercept/linear_equation) ')
            # if | when the input shows slope, then ~
            if type == 'slope':
                slope()
                a1 = input('Is there any other calculation you want to try? (y/n/fc/sf) ')
                if a1 == 'y':
                    type_of_calculation()
                elif a1 == 'n':
                    print('system-off')
                elif a1 == 'fc':
                    free_calc()
                elif a1 == 'sf':
                    standard_form()

            # elif | when the input shows y_intercept, then ~
            elif type == 'y_intercept':
                y_intercept()
                a2 = input('Is there any other calculation you want to try? (y/n/fc/sf) ')
                if a2 == 'y':
                    type_of_calculation()
                elif a2 == 'n':
                    print('system-off')
                elif a2 == 'fc':
                    free_calc()
                elif a2 == 'sf':
                    standard_form()

            # elif | when the input shows linear_equation, then ~
            elif type == 'linear_equation':
                linear_equation()
                a3 = input('Is there any other calculation you want to try? (y/n/fc/sf) ')
                if a3 == 'y':
                    type_of_calculation()
                elif a3 == 'n':
                    print('system-off')
                elif a3 == 'fc':
                    free_calc()
                elif a3 == 'sf':
                    standard_form()


        # elif | when answer is no, then ~
        elif y_n == 'n':
            print('system-off')
        elif y_n == 'fc':
            free_calc()
        elif y_n == 'sf':
            standard_form()
        # elif | when answer is to create, then ~

    answer = input('What output do you want to receive? (slope/y_intercept/linear_equation) ')

    # IF Statements

    # slope calculation
    if answer == 'slope':
        slope()
        y_n = input('Is there any other calculation you want to try? (y/n/fc/sf) ')
        type_of_calculation()

    # y_intercept calculation
    if answer == 'y_intercept':
        y_intercept()
        y_n = input('Is there any other calculation you want to try? (y/n/fc/sf) ')
        type_of_calculation()

    # linear_equation calculation
    if answer == 'linear_equation':
        linear_equation()
        y_n = input('Is there any other calculation you want to try? (y/n/fc/sf) ')
        type_of_calculation()

def free_calc():
    print('-' * 5, 'Calculator', '-' * 5)
    free_calc = input('Enter your calculation : ')
    free_calc = free_calc.split(' ')

    def another():
        ask = input('Is there any other calculation you want to try? (y/n/sf) ')
        if ask == 'y':
            free_calc2 = input('Enter your calculation : ')
            free_calc2 = free_calc2.split(' ')
            if free_calc2[1] == '*':
                print(float(free_calc2[0]) * float(free_calc2[2]))
                another()
            elif free_calc2[1] == '/':
                print(float(free_calc2[0]) / float(free_calc2[2]))
                another()
            elif free_calc2[1] == '+':
                print(float(free_calc2[0]) + float(free_calc2[2]))
                another()
            elif free_calc2[1] == '-':
                print(float(free_calc2[0]) - float(free_calc2[2]))
                another()

            # Multiple calculation
            '''if equation2[3] == '*':'''


        elif ask == 'n':
            print('system-off')
        elif ask == 'sf':
            standard_form()


    def multiply():
        if free_calc[1] == '*':
            print(float(free_calc[0]) * float(free_calc[2]))
            another()


    def add():
        if free_calc[1] == '+':
            print(float(free_calc[0]) + float(free_calc[2]))
            another()


    def subtract():
        if free_calc[1] == '-':
            print(float(free_calc[0]) - float(free_calc[2]))
            another()


    def divide():
        if free_calc[1] == '/':
            print(float(free_calc[0]) / float(free_calc[2]))
            another()


    multiply()
    add()
    subtract()
    divide()


if ask == 'standard_form':
    standard_form()
elif ask == 'free_calc':
    free_calc()
    
    
# Strength: I combined both basic calculator and standard form calculator
# Weakness: too much codes were added to adapt the negative value.
