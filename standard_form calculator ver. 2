#Calculator / Originally created by Daniel MinYoung Park


equation = input('Insert your equation [ax + by = c] ')
equation = equation.split(' ')

def slope():
    print('Slope from your standard formed equation is ... ',(-1*int(equation[0][0]))/int(equation[2][0]))

def y_intercept():
    print('Y-intercept from your standard formed equation is ... ',int(equation[4])/int(equation[2][0]))

def linear_equation():
    print('linear equation for your standard formed equation is ...' \
          ,'y','=',-1*int(equation[0][0])/int(equation[2][0]) \
          ,'x','+',int(equation[4])/int(equation[2][0]))

def type_of_calculation():
    if y_n == 'y':
        type = input('What type of calculation do you want to try? (slope/y_intercept/linear_equation) ')
        # if | when the input shows slope, then ~
        if type == 'slope':
            slope()
            a1 = input('Is there any other calculation you want to try? (y/n) ')
            if a1 == 'y':
                type_of_calculation()
            elif a1 == 'n':
                print('system-off')

        # elif | when the input shows y_intercept, then ~
        elif type == 'y_intercept':
            y_intercept()
            a2 = input('Is there any other calculation you want to try? (y/n) ')
            if a2 == 'y':
                type_of_calculation()
            elif a2 == 'n':
                print('system-off')

        # elif | when the input shows linear_equation, then ~
        elif type == 'linear_equation':
            linear_equation()
            a3 = input('Is there any other calculation you want to try? (y/n) ')
            if a3 == 'y':
                type_of_calculation()
            elif a3 == 'n':
                print('system-off')


    # elif | when answer is no, then ~
    elif y_n == 'n':
        print('system-off')
    # elif | when answer is to create, then ~

answer = input('What output do you want to receive? (slope/y_intercept/linear_equation) ')

# IF Statements

# slope calculation
if answer == 'slope':
    slope()
    y_n = input('Is there any other calculation you want to try? (y/n) ')
    type_of_calculation()

# y_intercept calculation
if answer == 'y_intercept':
    y_intercept()
    y_n = input('Is there any other calculation you want to try? (y/n) ')
    type_of_calculation()

# linear_equation calculation
if answer == 'linear_equation':
    linear_equation()
    y_n = input('Is there any other calculation you want to try? (y/n) ')
    type_of_calculation()


# Strength: converting the equation that was fully written by the user
# Weakness: can't convert both negative value & decimals
# Goal: Create a standard form calculator that allows both negative value and decimals
